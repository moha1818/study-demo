<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
         http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.moha.demo.dao,com.moha.demo.service" />
    <context:property-placeholder location="classpath:jdbc.properties"
                                  ignore-unresolvable="true"/>

    <!-- jdbc数据源文件
    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        &lt;!&ndash; 数据库地址 &ndash;&gt;
        <property name="url" value="${url}"></property>
        &lt;!&ndash; 用户名 &ndash;&gt;
        <property name="username" value="${name}"></property>
        &lt;!&ndash; 密码 &ndash;&gt;
        <property name="password" value="${password}"></property>
        &lt;!&ndash; 最大连接池数量 &ndash;&gt;
        <property name="maxActive" value="${db.maxActive}"></property>
        &lt;!&ndash; 初始化物理连接个数 &ndash;&gt;
        <property name="initialSize" value="${db.initialSize}"></property>
        &lt;!&ndash; 最小连接池数量 &ndash;&gt;
        <property name="minIdle" value="${db.minIdle}"></property>
        &lt;!&ndash; 最大等待时间 &ndash;&gt;
        <property name="maxWait" value="${db.maxWait}"></property>
        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"></property>
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"></property>
        &lt;!&ndash; 检测连接是否有效的SQL &ndash;&gt;
        <property name="testWhileIdle" value="${db.testWhileIdle}"></property>
        &lt;!&ndash; 申请连接时是否执行validationQuery &ndash;&gt;
        <property name="testOnBorrow" value="${db.testOnBorrow}"></property>
        &lt;!&ndash; 归还连接时是否执行validationQuery &ndash;&gt;
        <property name="testOnReturn" value="${db.testOnReturn}"></property>
        &lt;!&ndash; 配置扩展插件 统计监控:stat 日志:log4j 防御SQL注入:wall&ndash;&gt;
        <property name="filters" value="${db.filters}"></property>
        <property name="validationQuery" value="${db.validationQuery}"></property>
    </bean>



    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        &lt;!&ndash; 扫描entity包 &ndash;&gt;
        <property name="typeAliasesPackage" value="com.moha.demo.entity" />
        &lt;!&ndash; 扫描sql配置文件 &ndash;&gt;
        <property name="mapperLocations" value="classpath:mapping/*Mapper.xml" />
    </bean>

    &lt;!&ndash; 自动扫描包下的dao文件 &ndash;&gt;
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.moha.demo.dao"></property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>-->

    <!--<tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="true" />-->
    <bean id="threadPoolTaskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">

        <!-- 核心线程数，默认为1 -->
        <property name="corePoolSize" value="5" />

        <!-- 最大线程数，默认为Integer.MAX_VALUE -->
        <property name="maxPoolSize" value="10" />

        <property name="keepAliveSeconds" value="300" />

        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>

    <import resource="spring-mongo.xml"/>
</beans>